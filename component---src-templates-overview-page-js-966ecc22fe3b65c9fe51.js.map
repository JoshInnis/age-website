{"version":3,"file":"component---src-templates-overview-page-js-966ecc22fe3b65c9fe51.js","mappings":"uOAMWA,EAAS,iCCNpB,EAAe,IAA0B,0DCgGzC,EA5FiB,WACf,OAA4BC,EAAAA,EAAAA,UAAS,IAA9BC,EAAP,KAAeC,EAAf,KAEMC,EAAW,SAACC,GAChBF,EAAUG,OAAOD,GAClB,EAED,OACE,uBAAKE,UFJS,gCEKZ,uBAAKA,UFXW,oCEYd,uBAAKA,UFXa,wCEYhB,uBAAKA,UFRO,oCESV,0BACEC,KAAK,SACLD,UAAsB,MAAXL,EAAiBO,EAAgB,GAC5CC,QAAS,kBAAMN,EAAS,EAAf,EACTO,aAAc,kBAAMP,EAAS,EAAf,GAJhB,8BASF,uBAAKG,UFxBM,mCEyBT,0BACEC,KAAK,SACLD,UAAsB,MAAXL,EAAiBO,EAAgB,GAC5CC,QAAS,kBAAMN,EAAS,EAAf,EACTO,aAAc,kBAAMP,EAAS,EAAf,GAJhB,iBAQA,0BACEI,KAAK,SACLD,UAAsB,MAAXL,EAAiBO,EAAgB,GAC5CC,QAAS,kBAAMN,EAAS,EAAf,EACTO,aAAc,kBAAMP,EAAS,EAAf,GAJhB,mBAQA,0BACEI,KAAK,SACLD,UAAsB,MAAXL,EAAiBO,EAAgB,GAC5CC,QAAS,kBAAMN,EAAS,EAAf,EACTO,aAAc,kBAAMP,EAAS,EAAf,GAJhB,qBAQA,0BACEI,KAAK,SACLD,UAAsB,MAAXL,EAAiBO,EAAgB,GAC5CC,QAAS,kBAAMN,EAAS,EAAf,EACTO,aAAc,kBAAMP,EAAS,EAAf,GAJhB,cAUJ,uBAAKG,UFvDW,sCEwDd,uBAAKK,IAAKC,MAGd,uBAAKN,UF5DW,oCE6Dd,qBAAGA,UAAsB,MAAXL,EAAiBO,EAAgB,IAC7C,8BACA,iIAKF,qBAAGF,UAAsB,MAAXL,EAAiBO,EAAgB,IAC7C,8BADF,yFAKA,qBAAGF,UAAsB,MAAXL,EAAiBO,EAAgB,IAC7C,8BADF,kGAKA,qBAAGF,UAAsB,MAAXL,EAAiBO,EAAgB,IAC7C,8BADF,6DAIA,qBAAGF,UAAsB,MAAXL,EAAiBO,EAAgB,IAC7C,8BADF,gFAQP,E,UC5FUK,EAAgB,wCCUdC,EAAmB,SAAC,GAO1B,IAAD,EANJC,EAMI,EANJA,UACAC,EAKI,EALJA,eACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,WAGMC,EADF,EADJC,kBAEwCC,EAAAA,EAEtCP,SAAA,UAAAA,EAAWQ,uBAAX,SAA4BC,gBAAgBC,OAAOC,SAASf,IAG9D,OACE,gCACE,uBACEL,UD3BY,kCC8BZ,gBAACc,EAAD,CACEd,UAAWE,EACXU,QAASF,KAGb,2BAASV,UDjCG,gCCkCV,0BAAKW,GACL,gBAACG,EAAD,CAAad,UAAU,WAAWY,QAASA,IAC3C,gBAAC,EAAD,MACA,gBAACE,EAAD,CAAad,UAAWE,EAAsBU,QAASC,KAI9D,EA+BD,EArBiB,SAAC,GAAc,IACNQ,EADK,EAAXC,KACVC,eAER,OACE,gBAACC,EAAA,EAAD,KACE,gBAAChB,EAAD,CACEC,UAAWY,EAAKI,YAAYhB,UAC5BC,eAAgBW,EAAKI,YAAYf,eACjCC,MAAOU,EAAKI,YAAYd,MACxBC,QAASS,EAAKK,KACdb,WAAYQ,EAAKI,YAAYE,OAC7BZ,iBAAkBa,EAAAA,IAIzB,C","sources":["webpack://apahce-age-project/./src/components/styles/HowToAge.module.scss","webpack://apahce-age-project/./src/img/img-Storage.png","webpack://apahce-age-project/./src/components/HowToAge.js","webpack://apahce-age-project/./src/templates/styles/overview.module.scss","webpack://apahce-age-project/./src/templates/overview-page.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var Horizon = \"HowToAge-module--Horizon--sBMT9\";\nexport var Section1 = \"HowToAge-module--Section1--550WI\";\nexport var Section1Wrap = \"HowToAge-module--Section1Wrap--722Fi\";\nexport var Section2 = \"HowToAge-module--Section2--GMLsK\";\nexport var StorageImg = \"HowToAge-module--StorageImg--btnFP\";\nexport var Toggle = \"HowToAge-module--Toggle--J-Feg\";\nexport var Vertical = \"HowToAge-module--Vertical--4DWr9\";\nexport var root = \"HowToAge-module--root--oHsjp\";","export default __webpack_public_path__ + \"static/img-Storage-eaa52dec9e858abf91f425587cfa8e09.png\";","import React, { useState } from 'react';\nimport * as styles from './styles/HowToAge.module.scss';\nimport storagePmg from '../img/img-Storage.png';\n\nconst HowToAge = () => {\n  const [toggle, setToggle] = useState('');\n\n  const onToggle = (num) => {\n    setToggle(String(num));\n  };\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.Section1}>\n        <div className={styles.Section1Wrap}>\n          <div className={styles.Vertical}>\n            <button\n              type=\"button\"\n              className={toggle === '5' ? styles.Toggle : ''}\n              onClick={() => onToggle(5)}\n              onMouseEnter={() => onToggle(5)}\n            >\n              Transaction / Cashe Layer\n            </button>\n          </div>\n          <div className={styles.Horizon}>\n            <button\n              type=\"button\"\n              className={toggle === '1' ? styles.Toggle : ''}\n              onClick={() => onToggle(1)}\n              onMouseEnter={() => onToggle(1)}\n            >\n              Query Parsing\n            </button>\n            <button\n              type=\"button\"\n              className={toggle === '2' ? styles.Toggle : ''}\n              onClick={() => onToggle(2)}\n              onMouseEnter={() => onToggle(2)}\n            >\n              Query Transform\n            </button>\n            <button\n              type=\"button\"\n              className={toggle === '3' ? styles.Toggle : ''}\n              onClick={() => onToggle(3)}\n              onMouseEnter={() => onToggle(3)}\n            >\n              Planner/Optimizer\n            </button>\n            <button\n              type=\"button\"\n              className={toggle === '4' ? styles.Toggle : ''}\n              onClick={() => onToggle(4)}\n              onMouseEnter={() => onToggle(4)}\n            >\n              Executor\n            </button>\n          </div>\n        </div>\n        <div className={styles.StorageImg}>\n          <img src={storagePmg} />\n        </div>\n      </div>\n      <div className={styles.Section2}>\n        <p className={toggle === '1' ? styles.Toggle : ''}>\n          <i>1</i>\n          <span>\n            Pares Cypher queries by a function call tha uses a parser followong\n            the openCypher specification\n          </span>\n        </p>\n        <p className={toggle === '2' ? styles.Toggle : ''}>\n          <i>2</i>\n          Teansforms a Cypher query into a Query tree that will be attached as a\n          subquery node.\n        </p>\n        <p className={toggle === '3' ? styles.Toggle : ''}>\n          <i>3</i>\n          Understands some graph operations and produces plan nodes that are\n          related to graph operation.\n        </p>\n        <p className={toggle === '4' ? styles.Toggle : ''}>\n          <i>4</i>\n          Executes plan nodes that are related to graph operations.\n        </p>\n        <p className={toggle === '5' ? styles.Toggle : ''}>\n          <i>5</i>\n          Cypher aueries work with Postgre' existing fully transaction system\n          (ACID).\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default HowToAge;\n","// extracted by mini-css-extract-plugin\nexport var banner = \"overview-module--banner--pQWT8\";\nexport var bannerContent = \"overview-module--bannerContent--cPivc\";\nexport var root = \"overview-module--root--PmdWh\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport HowToAge from '../components/HowToAge';\nimport Content, { HTMLContent } from '../components/Content';\n// styles\nimport * as styles from './styles/overview.module.scss';\n// page by style\nimport './styles/pageby.scss';\n\n// eslint-disable-next-line\nexport const OverviewTemplate = ({\n  bannerImg,\n  bannerContents,\n  title,\n  content,\n  subcontent,\n  contentComponent,\n}) => {\n  const PageContent = contentComponent || Content;\n  const bannerSrc =\n    bannerImg?.childImageSharp?.gatsbyImageData.images.fallback.src ||\n    bannerImg;\n\n  return (\n    <>\n      <div\n        className={styles.banner}\n        // style={{ backgroundImage: `url(${bannerSrc})` }} remove image\n      >\n        <PageContent\n          className={styles.bannerContent}\n          content={bannerContents}\n        />\n      </div>\n      <section className={styles.root}>\n        <h1>{title}</h1>\n        <PageContent className=\"Overview\" content={content} />\n        <HowToAge />\n        <PageContent className={styles.bannerContent} content={subcontent} />\n      </section>\n    </>\n  );\n};\n\nOverviewTemplate.propTypes = {\n  bannerImg: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string,\n  subcontent: PropTypes.string,\n  contentComponent: PropTypes.func,\n};\n\nconst OverView = ({ data }) => {\n  const { markdownRemark: post } = data;\n\n  return (\n    <Layout>\n      <OverviewTemplate\n        bannerImg={post.frontmatter.bannerImg}\n        bannerContents={post.frontmatter.bannerContents}\n        title={post.frontmatter.title}\n        content={post.html}\n        subcontent={post.frontmatter.subcon}\n        contentComponent={HTMLContent}\n      />\n    </Layout>\n  );\n};\n\nOverView.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default OverView;\n\nexport const aboutPageQuery = graphql`\n  query OverViewPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        bannerImg {\n          childImageSharp {\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\n          }\n        }\n        bannerContents\n        title\n        subcon\n      }\n    }\n  }\n`;\n"],"names":["Toggle","useState","toggle","setToggle","onToggle","num","String","className","type","styles","onClick","onMouseEnter","src","storagePmg","bannerContent","OverviewTemplate","bannerImg","bannerContents","title","content","subcontent","PageContent","contentComponent","Content","childImageSharp","gatsbyImageData","images","fallback","post","data","markdownRemark","Layout","frontmatter","html","subcon","HTMLContent"],"sourceRoot":""}